{{- if .Values.postgres.enabled }}
{{- $pg := .Values.postgres }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with $pg.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: {{ $pg.image | quote }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: pg
              containerPort: {{ $pg.port | default 5432 }}
          env:
            - name: {{ default "POSTGRESQL_USER" $pg.envVarNames.user }}
              value: {{ $pg.auth.user | quote }}
            - name: {{ default "POSTGRESQL_PASSWORD" $pg.envVarNames.password }}
              value: {{ $pg.auth.password | quote }}
            - name: {{ default "POSTGRESQL_DATABASE" $pg.envVarNames.database }}
              value: {{ $pg.auth.database | quote }}
          volumeMounts:
            - name: pgdata
              mountPath: {{ default "/var/lib/postgresql/data" $pg.dataDir | quote }}
      volumes:
        - name: pgdata
{{- if $pg.storage.enabled }}
          persistentVolumeClaim:
            claimName: postgres-data
{{- else }}
          emptyDir: {}
{{- end }}
{{- end }}
