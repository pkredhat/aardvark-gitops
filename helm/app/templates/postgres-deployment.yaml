{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image | quote }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: pg
              containerPort: {{ .Values.postgres.port | default 5432 }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.auth.user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.auth.password | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.auth.database | quote }}
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pgdata
{{- if .Values.postgres.storage.enabled }}
          persistentVolumeClaim:
            claimName: postgres-data
{{- else }}
          emptyDir: {}
{{- end }}
{{- end }}
